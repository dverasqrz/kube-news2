# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  CI:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Docker Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{secrets.DOCKERHUB_USER}}
        password: ${{secrets.DOCKERHUB_PWD}}
        
    - name: Build and push Docker images
      uses: docker/build-push-action@v3.2.0
      with:
        # Build's context is the set of files located in the specified PATH or URL
        context: ./src
        # Path to the Dockerfile
        file: ./src/Dockerfile
        # Push is a shorthand for --output=type=registry
        push: true
        # List of tags
        tags: |
          dverazs/kube-news2:latest
          dverazs/kube-news2:${{github.run_number}}

  CD:
  
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Kubernetes Set Context
      uses: Azure/k8s-set-context@v3.0
      with:
        # Acceptable values: kubeconfig or service-account or service-principal
        method: kubeconfig
        # Contents of kubeconfig file
        kubeconfig: ${{secrets.K8S_CONFIG}}
        # If your kubeconfig has multiple contexts, use this field to use a specific context, otherwise the default one would be chosen
        context: # optional
        # Service account secret (run kubectl get serviceaccounts <service-account-name> -o yaml and copy the service-account-secret-name)
        k8s-secret: # optional
        # Token extracted from the secret of service account (should be base 64 decoded)
        token: # optional
        # Azure resource group name
        resource-group: # optional
        # Azure connected cluster name
        cluster-name: # optional
    - name: Deploy to Kubernetes cluster
      uses: Azure/k8s-deploy@v4
      with:
        # Path to the manifest files which will be used for deployment.
        manifests: 
        # Fully qualified resource URL of the image(s) to be used for substitutions on the manifest files Example: contosodemo.azurecr.io/helloworld:test
        images: dverazs/kube-news2:${{github.run_number}}
        # Name of a docker-registry secret that has already been set up within the cluster. Each of these secret names are added under imagePullSecrets field for the workloads found in the input manifest files
        imagepullsecrets: # optional
        # Switch whether to pull the images from the registry before deployment to find out Dockerfile's path in order to add it to the annotations
        pull-images: # optional, default is true
        # Deployment strategy to be used. Allowed values are basic, canary and blue-green
        strategy: # default is basic
        # Route based on service, ingress or SMI for blue-green strategy
        route-method: # optional, default is service
        # Indicates the buffer time in minutes before the switch is made to the green version (max is 300 min ie. 5hrs)
        version-switch-buffer: # optional, default is 0
        # Traffic split method to be used. Allowed values are pod and smi
        traffic-split-method: # optional, default is pod
        # Annotations in the form of key/value pair to be added to TrafficSplit. Relevant only if deployement strategy is blue-green or canary
        traffic-split-annotations: # optional
        # Baseline and canary replicas count. Valid value between 0 to 100 (inclusive)
        baseline-and-canary-replicas: # optional, default is 
        # Percentage of traffic redirect to canary deployment
        percentage: # optional, default is 0
        # deploy, promote, or reject
        action: # default is deploy
        # Deploy when a previous deployment already exists. If true then --force argument is added to the apply command
        force: # optional
        # Github token
        token: # default is ${{ github.token }}
        # Annotate the target namespace
        annotate-namespace: # optional, default is true
        # True if cluster is AKS private cluster
        private-cluster: # optional
        # Name of resource group - Only required if using private cluster
        resource-group: # optional
        # Resource group name - Only required if using private cluster
        name: # optional
