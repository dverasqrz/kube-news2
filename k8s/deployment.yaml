apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubenews
spec:
  replicas: 3
  selector:
    matchLabels:
      app: kubenews
  template:
    metadata:
      labels:
        app: kubenews
      # Monitoring: Adjust Prometheus configuration
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
        prometheus.io/port: "8080"
    spec:
      containers:
      - name: kubenews
        image: dverazs/kube-news2:latest
        envFrom:
          - configMapRef:
              name: api-configmap
        env:
        - name: POSTGRES_PASSWORD
          valueFrom:
              secretKeyRef:
                key: POSTGRES_PASSWORD
                name: postgres-secret
        - name: POSTGRES_USER
          valueFrom:
              secretKeyRef:
                key: POSTGRES_USER
                name: postgres-secret
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        readinessProbe: # ready to receive requests
          httpGet:
            path: /metrics
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 2
          failureThreshold: 3
          periodSeconds: 10